library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;
use work.types_pkg.all;
                 
    entity FullyConnectedOperator is
        
        port (i_CLK : in std_logic;
              i_CLR : in std_logic;
              i_PIX : in std_logic_vector(7 downto 0);
              i_WEIGHT : in array (0 to 0) of std_logic_vector(7 downto 0);
              i_REG_PIX_ENA : in std_logic;
              i_REG_WEIGHT_ENA : in std_logic;
              i_BIAS_SCALE : in std_logic_vector(31 downto 0);
              i_REG_BIAS_ADDR : in std_logic_vector(5 downto 0);
              i_REG_BIAS_ENA : in std_logic;
              i_ACC_ENA : in std_logic;
              i_ACC_CLR : in std_logic;
              i_REG_OUT_CLR : in std_logic:= '0';
              i_REG_OUT_ENA : in std_logic;
              i_REG_OUT_CLR : in std_logic_vector(5 downto 0):= (others => '0');
              o_PIX : out array (0 to 34) of std_logic_vector(7 downto 0):= (others => (others => '0'))
        );
    end FullyConnectedOperator;
                 
    architecture arc of FullyConnectedOperator is
        signal w_NFC_OUT : array (0 to 0) of std_logic_vector(31 downto 0) := (others => (others => '0'));
        signal w_ADD_BIAS_OUT : array (0 to 0) of std_logic_vector(31 downto 0) := (others => (others => '0'));
        signal w_A : array (0 to 0) of std_logic_vector(31 downto 0) := (others => (others => '0'));
        signal w_B : std_logic_vector(31 downto 0) := (others => '0');
        signal w_SCALE_OUT : array (0 to 0) of std_logic_vector(63 downto 0) := (others => (others => '0'));
        signal w_CAST_OUT : array (0 to 0) of std_logic_vector(31 downto 0) := (others => (others => '0'));
        signal w_SHIFT_OUT : array (0 to 0) of std_logic_vector(31 downto 0) := (others => (others => '0'));
        signal w_OFFSET_OUT : array (0 to 0) of std_logic_vector(31 downto 0) := (others => (others => '0'));
        signal w_CLIP_OUT : array (0 to 0) of std_logic_vector(7 downto 0) := (others => (others => '0'));
        signal r_REG_OUT : array (0 to 34) of std_logic_vector(7 downto 0) := (others => (others => '0'));
        signal w_BIAS_ADDR : std_logic_vector(0 downto 0) := (others => '0');
        signal w_SCALE : std_logic_vector(31 downto 0) := (others => '0');
        signal w_REG_OUT_ADDR : std_logic_vector(34 downto 0) := (others => '0');
        signal w_REG_BIAS_OUT_0 : std_logic_vector(31 downto 0) := (others => "0");


        begin 
        u_UNIT_0 : entity work.neuron_8_32
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_CLR,
            i_ACC_ENA  => i_ACC_ENA,
            i_REG_PIX_ENA  => i_REG_PIX_ENA,
            i_REG_WEIGHT_ENA  => i_REG_WEIGHT_ENA,
            i_ACC_CLR  => i_ACC_CLR,
            i_PIX  => i_PIX,
            i_WEIGHT  => i_WEIGHT(0),
            o_PIX  => w_NFC_OUT(0)
        );
 
        u_REG_BIAS_0 : entity work.registrador_32b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_CLR,
            i_ENA  => i_REG_BIAS_ENA and w_BIAS_ADDR(0),
            i_A  => i_BIAS_SCALE,
            o_Q  => w_REG_BIAS_OUT
        );
 
        u_REG_OUT_0 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(0),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(0)
        );
 
        u_REG_OUT_1 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(1),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(1)
        );
 
        u_REG_OUT_2 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(2),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(2)
        );
 
        u_REG_OUT_3 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(3),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(3)
        );
 
        u_REG_OUT_4 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(4),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(4)
        );
 
        u_REG_OUT_5 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(5),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(5)
        );
 
        u_REG_OUT_6 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(6),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(6)
        );
 
        u_REG_OUT_7 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(7),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(7)
        );
 
        u_REG_OUT_8 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(8),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(8)
        );
 
        u_REG_OUT_9 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(9),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(9)
        );
 
        u_REG_OUT_10 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(10),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(10)
        );
 
        u_REG_OUT_11 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(11),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(11)
        );
 
        u_REG_OUT_12 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(12),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(12)
        );
 
        u_REG_OUT_13 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(13),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(13)
        );
 
        u_REG_OUT_14 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(14),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(14)
        );
 
        u_REG_OUT_15 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(15),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(15)
        );
 
        u_REG_OUT_16 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(16),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(16)
        );
 
        u_REG_OUT_17 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(17),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(17)
        );
 
        u_REG_OUT_18 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(18),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(18)
        );
 
        u_REG_OUT_19 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(19),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(19)
        );
 
        u_REG_OUT_20 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(20),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(20)
        );
 
        u_REG_OUT_21 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(21),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(21)
        );
 
        u_REG_OUT_22 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(22),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(22)
        );
 
        u_REG_OUT_23 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(23),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(23)
        );
 
        u_REG_OUT_24 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(24),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(24)
        );
 
        u_REG_OUT_25 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(25),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(25)
        );
 
        u_REG_OUT_26 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(26),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(26)
        );
 
        u_REG_OUT_27 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(27),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(27)
        );
 
        u_REG_OUT_28 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(28),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(28)
        );
 
        u_REG_OUT_29 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(29),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(29)
        );
 
        u_REG_OUT_30 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(30),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(30)
        );
 
        u_REG_OUT_31 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(31),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(31)
        );
 
        u_REG_OUT_32 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(32),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(32)
        );
 
        u_REG_OUT_33 : entity work.registrador_8b
        port map (
            i_CLK  => i_CLK,
            i_CLR  => i_REG_OUT_CLR,
            i_ENA  => i_REG_OUT_ENA and W_REG_OUT_ADDR(33),
            i_A  => w_CLIP_OUT(0),
            o_Q  => r_REG_OUT(33)
        );
 
        u_OHE_BIAS : entity work.One_Hot_Encoder_6x1
        port map (
            i_DATA  => i_REG_BIAS_ADDR,
            o_DATA  => w_BIAS_ADDR
        );
 
        u_OHE_OUT : entity work.One_Hot_Encoder_6x35
        port map (
            i_DATA  => i_REG_OUT_ADDR,
            o_DATA  => W_REG_OUT_ADDR
        );

  o_PIX <= r_REG_OUT;
        
    end arc;