library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity testbench is
end testbench;

architecture testbench of testbench is
    constant p_TAMANHO : natural := 8;
 
    signal w_DATA, w_KERNEL : signed(0 to p_TAMANHO-1);
    signal w_RST, w_ENA: std_logic := '0';
    
    signal w_RESULT, w_VALUE : integer;

begin
    uut : entity work.top 
        generic map (p_TAMANHO)
        port map (
            i_DATA   => w_DATA,
            i_KERNEL => w_KERNEL,
            i_RST => w_RST,
            i_ENA => w_ENA,
            i_VALUE => w_VALUE,
            o_VALUE  => w_RESULT
        );

    p_INPUTS: process
    begin
  

        
        w_RST <= '1';
        w_ENA <= '0';        
        w_VALUE <= 0;
        w_DATA <= "11111111";
        w_KERNEL <= "11111111";        
        wait for 1 ns;
        assert w_RESULT = 0 report "Fail @ 1" severity error;
        
               
        w_VALUE <= 1;
        w_DATA <= "00000001";
        w_KERNEL <= "00000001";
        wait for 1 ns;
        assert w_RESULT = 0 report "Fail @ 2" severity error;
        
        
        w_RST <= '0';
        w_ENA <= '1';
        wait for 1 ns;        
        assert w_RESULT = 2 report "Fail @ 3" severity error;
        
          
        w_ENA <= '0';
        wait for 1 ns;
        
        w_DATA <= "00000110";
        w_KERNEL <= "00000110";
        wait for 1 ns;
        w_VALUE <= 1;
        wait for 1 ns;
        w_ENA <= '1';
        
        wait for 1 ns;
        assert w_RESULT = 37 report "Fail @ 4" severity error;
    

        wait;
    end process;

end testbench;
